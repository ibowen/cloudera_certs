CREATE DATABASE IF NOT EXISTS cards;
CREATE DATABASE IF NOT EXISTS retail_ods;
CREATE DATABASE retail_edw;
CREATE DATABASE retail_stage;

# retail_ods
hive> CREATE TABLE categories (
    > category_id int,
    > category_department_id int,
    > category_name string
    > )
    > ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
    > STORED AS TEXTFILE;
hive> CREATE TABLE customers (
    > customer_id int,
    > customer_fname string,
    > customer_lname string,
    > customer_email string,
    > customer_password string,
    > customer_street string,
    > customer_city string,
    > customer_state string,
    > customer_zipcode string
    > )
    > ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
    > STORED AS TEXTFILE;
hive> CREATE TABLE departments (
    > department_id int,
    > department_name string
    > )
    > ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
    > STORED AS TEXTFILE;
hive> CREATE TABLE orders (
    > order_id int,
    > order_date string,
    > order_customer_id int,
    > order_status string
    > )
    > PARTITIONED BY (order_month string)
    > ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
    > STORED AS TEXTFILE;
REATE TABLE order_items (
    > order_item_id int,
    > order_item_order_id int,
    > order_item_order_date string,
    > order_item_product_id int,
    > order_item_quantity smallint,
    > order_item_subtotal float,
    > order_item_product_price float
    > )
    > PARTITIONED BY (order_month string)
    > ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
    > STORED AS TEXTFILE;
hive> CREATE TABLE order_items_bucket (
    > order_item_id int,
    > order_item_order_id int,
    > order_item_order_date string,
    > order_item_product_id int,
    > order_item_quantity smallint,
    > order_item_subtotal float,
    > order_item_product_price float
    > )
    > CLU
    > PARTITIONED BY (order_month string)
    > ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
    > STORED AS TEXTFILE;

# retail_edw
ve> CREATE TABLE products_dimension (
    > product_id int,
    > product_name string,
    > product_description string,
    > product_price float,
    > product_category_name string,
    > product_department_name string
    > )
    > ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
    > STORED AS TEXTFILE;

hive> 
    > CREATE TABLE order_fact (
    > order_item_order_id int,
    > order_item_order_date string,
    > order_item_product_id int,
    > order_item_quantity smallint,
    > order_item_subtotal float,
    > order_item_product_price float
    > )
    > PARTITIONED BY (product_category_department string)
    > ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
    > STORED AS TEXTFILE;

sqoop import-all-tables --connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' --username retail_dba --password cloudera --hive-database retail_db --hive-import --hive-overwrite --create-hive-table  --fields-terminated-by '|' --compress --compression-codec org.apache.hadoop.io.compress.SnappyCodec --outdir java_files

insert overwrite table order_items partition (order_month)
select oi.order_item_id, oi.order_item_order_id, o.order_date,
oi.order_item_product_id, oi.order_item_quantity, oi.order_item_subtotal,
oi.order_item_product_price, substr(o.order_date, 1, 7)
order_month from retail_stage.order_items oi join retail_stage.orders_stage o
on oi.order_item_order_id = o.order_id;

sqoop import-all-tables --connect 'jdbc:mysql://quickstart.cloudera/retail_db' --username retail_dba --password cloudera --warehouse-dir /user/cloudera/sqoop_import/ --fields-terminated-by ',' --as-avrodatafile --outdir java_files

hadoop fs -mkdir /user/cloudera/avsc_files
hadoop fs -put ~/*.avsc /user/cloudera/avsc_files

CREATE DATABASE IF NOT EXISTS retail_stage;
USE retail_stage;

CREATE EXTERNAL TABLE categories
STORED AS AVRO
LOCATION 'hdfs:///user/cloudera/sqoop_import/categories'
TBLPROPERTIES ('avro.schema.url'='hdfs://quickstart.cloudera/user/cloudera/avsc_files/categories.avsc');

CREATE EXTERNAL TABLE customers
STORED AS AVRO
LOCATION 'hdfs:///user/cloudera/sqoop_import/customers'
TBLPROPERTIES ('avro.schema.url'='hdfs://quickstart.cloudera/user/cloudera/avsc_files/customers.avsc');

CREATE EXTERNAL TABLE departments
STORED AS AVRO
LOCATION 'hdfs:///user/cloudera/sqoop_import/departments'
TBLPROPERTIES ('avro.schema.url'='hdfs://quickstart.cloudera/user/cloudera/avsc_files/departments.avsc');

CREATE EXTERNAL TABLE orders
STORED AS AVRO
LOCATION 'hdfs:///user/cloudera/sqoop_import/orders'
TBLPROPERTIES ('avro.schema.url'='hdfs://quickstart.cloudera/user/cloudera/avsc_files/orders.avsc');

CREATE EXTERNAL TABLE order_items
STORED AS AVRO
LOCATION 'hdfs:///user/cloudera/sqoop_import/order_items'
TBLPROPERTIES ('avro.schema.url'='hdfs://quickstart.cloudera/user/cloudera/avsc_files/order_items.avsc');

CREATE EXTERNAL TABLE products
STORED AS AVRO
LOCATION 'hdfs:///user/cloudera/sqoop_import/products'
TBLPROPERTIES ('avro.schema.url'='hdfs://quickstart.cloudera/user/cloudera/avsc_files/products.avsc');

CREATE TABLE orders_part_avro (
order_id int,
order_date bigint,
order_customer_id int,
order_status string
)
PARTITIONED BY (order_month string)
STORED AS AVRO
LOCATION 'hdfs:///user/cloudera/sqoop_import/orders_part_avro'
TBLPROPERTIES ('avro.schema.url'='hdfs://quickstart.cloudera/user/cloudera/avsc_files/orders_part_avro.avsc');
